cvc2git - Use git to manage a conary package:source.

Usage
------
cvc2git <comamnd> <options>

Available commands are CLONE, PULL.

    cvc2git clone <package-fullversion> [<directory>]

        Pull a conary package into a new directory.

        <package-fullversion>
            Package name with label, as returned by 'conary q --full-versions'.
            Such as pkg=foresight.rpath.org@fl:2-devel or
            pkg:source=foresight.rpath.org@fl:2-devel.

        <directory>
            The name of a new directory to clone into. If not specified, the
            package name is used.

    cvc2git pull

        Update a local clone to latest revision. This must be run from within a
        existing repository (created from cvc2git clone)

Implementation
--------------
Got quite stuck on the hg-cvc tool, so I started this very-poor-behaving one.

Basically, it works by checking out each revision of the package (cvc update
<revision>), commit it to git (git add; git commit), checking out the next
revision, on and on.

That's each and every revision. Plus the bad speed of cvc, so this is very slow.

Example
-------
$ python cvc2git monodevelop=foresight.rpath.org@fl:2-devel

This will checkout monodevelop:source and put it in the ./monodevelop
directory. It's a normal git repository and you can run normal git commands
there.

$ python cvc2git avr-binutils=/jesse.rpath.org@fl:2-devel test

This will checkout avr-binutils from my personal repository into ./test.
